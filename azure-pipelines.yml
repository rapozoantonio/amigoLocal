trigger:
  - master
pool:
  vmImage: 'ubuntu-latest'
steps:
- checkout: self
  persistCredentials: true
  
- script: |
    echo "Cleaning task cache..."
    if [ -d "$(Agent.ToolsDirectory)/_tasks/AzurePRBot_*" ]; then
      rm -rf $(Agent.ToolsDirectory)/_tasks/AzurePRBot_*
    fi
  displayName: 'Clean task cache'
  condition: succeededOrFailed()

- script: |
    echo "===== BUILD CONTEXT INFORMATION ====="
    echo "Build.Reason: $(Build.Reason)"
    echo "Build.SourceBranch: $(Build.SourceBranch)"
    echo "System.PullRequest.SourceBranch: $(System.PullRequest.SourceBranch)"
    echo "System.PullRequest.TargetBranch: $(System.PullRequest.TargetBranch)"
    echo "System.PullRequest.PullRequestId: $(System.PullRequest.PullRequestId)"
    
    echo "===== OPENAI API KEY CHECK ====="
    # Safely check if API key exists without revealing it
    if [ -n "$(OPENAI_API_KEY)" ]; then
      echo "OPENAI_API_KEY is set (length: ${#OPENAI_API_KEY})"
    else
      echo "WARNING: OPENAI_API_KEY is not set!"
    fi
  displayName: 'Check build context'
  condition: succeededOrFailed()

- script: |
    echo "===== DETAILED TASK DIRECTORY INSPECTION ====="
    echo "Looking for tasks in the standard locations:"
    
    echo "1. Agent tools directory:"
    ls -la $(Agent.ToolsDirectory)/_tasks/ 2>/dev/null || echo "No _tasks directory found"
    
    echo "2. Work directory:"
    ls -la /home/vsts/work/_tasks/ 2>/dev/null || echo "No work/_tasks directory found"
    
    echo "3. Checking for existing AzurePRBot task:"
    find /home -name "AzurePRBot*" -type d 2>/dev/null || echo "No AzurePRBot directories found"
    
    echo "4. Check task installation directory structure:"
    TASK_DIR=$(find /home -name "AzurePRBot_018f87db-0fa6-79f2-8a8a-7661bb024e67" -type d 2>/dev/null | head -1)
    if [ ! -z "$TASK_DIR" ]; then
      echo "Found task directory: $TASK_DIR"
      echo "Listing contents:"
      ls -la "$TASK_DIR"
      
      echo "Checking version directories:"
      ls -la "$TASK_DIR"/* 2>/dev/null
      
      echo "Checking for dist/index.js:"
      find "$TASK_DIR" -name "index.js" 2>/dev/null
    else
      echo "Task directory not found"
    fi
  displayName: 'Pre-execution diagnostics'
  condition: succeededOrFailed()
  
- task: AzurePRBot@1
  displayName: 'AI PR Review'
  inputs:
    api_key: $(OPENAI_API_KEY)
    model: 'gpt-4o'
    ignore_patterns: |
      **/*.md
      **/*.json
      package-lock.json
    custom_instructions: |
      Focus on code quality, potential bugs, and adherence to best practices.
      Pay attention to performance issues and security concerns.
  continueOnError: true
  timeoutInMinutes: 10

- script: |
    echo "===== POST-EXECUTION DIAGNOSTICS ====="
    echo "1. Checking task installation after execution:"
    find /home -name "AzurePRBot*" -type d 2>/dev/null || echo "No AzurePRBot directories found"
    
    echo "2. Check task.json and version details:"
    TASK_DIR=$(find /home -name "AzurePRBot_018f87db-0fa6-79f2-8a8a-7661bb024e67" -type d 2>/dev/null | head -1)
    if [ ! -z "$TASK_DIR" ]; then
      echo "Found task directory: $TASK_DIR"
      
      echo "Listing version directories:"
      ls -la "$TASK_DIR"
      
      for VERSION_DIR in "$TASK_DIR"/*/ ; do
        echo "Examining version directory: $VERSION_DIR"
        ls -la "$VERSION_DIR"
        
        echo "Checking for task.json:"
        if [ -f "$VERSION_DIR/task.json" ]; then
          echo "task.json found, checking contents:"
          cat "$VERSION_DIR/task.json" | grep -E '"version"|"execution"'
        else
          echo "No task.json found"
        fi
        
        echo "Checking for dist directory:"
        if [ -d "$VERSION_DIR/dist" ]; then
          echo "dist directory found, contents:"
          ls -la "$VERSION_DIR/dist/"
        else
          echo "No dist directory found"
        fi
      done
    else
      echo "Task directory not found after execution"
    fi
  displayName: 'Post-execution diagnostics'
  condition: succeededOrFailed()

- script: |
    echo "===== TASK EXECUTION LOG CHECK ====="
    echo "Checking recent agent logs for task execution details..."
    
    # Find and display any relevant log files
    find /home/vsts -type f -name "*.log" -mmin -15 | xargs grep -l "AzurePRBot" | xargs cat 2>/dev/null || echo "No recent logs found with task mentions"
    
    echo "Checking Azure DevOps task execution logs..."
    find /home/vsts/.azure-pipelines -type f -name "*.log" -mmin -15 2>/dev/null | xargs grep -l "AzurePRBot" | xargs cat 2>/dev/null || echo "No task execution logs found"
  displayName: 'Check task logs'
  condition: succeededOrFailed()